# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-10-24 21:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cases', '0002_nodule_lung_orientation'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseComparison',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='casecomparison_case', serialize=False, to='cases.Case')),
                ('comparison', models.CharField(help_text='Comparison with previous screening', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='CasePleuralSpaces',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='casepleuralspaces_case', serialize=False, to='cases.Case')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalInformation',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='clinicalinformation_case', serialize=False, to='cases.Case')),
                ('screening_visit', models.CharField(choices=[('BL', 'Baseline'), ('Y1', 'Year 1'), ('Y2', 'Year 2')], max_length=2)),
                ('clinical_information', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ExamParameters',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='examparameters_case', serialize=False, to='cases.Case')),
                ('diagnostic_quality', models.CharField(choices=[('SF', 'Satisfactory'), ('LI', 'Limited, but interpretable'), ('ND', 'Non - diagnostic')], max_length=2)),
                ('exam_parameters_comment', models.CharField(help_text='Comment on the quality of diagnostic', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraInformation',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='extrainformation_case', serialize=False, to='cases.Case')),
                ('need_comparison', models.CharField(help_text='Shows if comparison is needed', max_length=250)),
                ('repeat_CT', models.CharField(choices=[('T1', '12 months from screening exam'), ('T2', '3 months from screening exam'), ('T3', '6 months from screening exam'), ('T4', '3 to 6 months from screening exam'), ('T5', '24 months from screening exam')], help_text='The date of next ct', max_length=2)),
                ('see_physician', models.CharField(choices=[('NO', 'No.'), ('YC', 'Yes, Suspect cancer.'), ('YM', 'Yes, non - malignant finding.')], help_text='Shows if the patient should visit physician', max_length=2)),
                ('impression_comment', models.CharField(default='', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='HeartFindings',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='heartfindings_case', serialize=False, to='cases.Case')),
                ('heart_size', models.IntegerField(choices=[(0, 'NORMAL'), (1, 'MILDLY ENLARGED'), (2, 'MODERATELY ENLARGED'), (3, 'SEVERELY ENLARGED')])),
                ('coronary_calcification', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'SEVERE')], help_text='Describes the degree of Coronary calcification')),
                ('pericardial_effusion', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'SEVERE')], help_text='Describes the degree of Pericardial effusion')),
            ],
        ),
        migrations.CreateModel(
            name='LungsFindings',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='lungsfindings_case', serialize=False, to='cases.Case')),
                ('COPD', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'SEVERE')], help_text='Term used to describe progressive lung diseases. Describes the degree of copd progress')),
                ('fibrosis', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'SEVERE')], help_text='Describes the degree of fibrosis progress')),
                ('lymph_nodes', models.CharField(help_text='Description of the lymph nodes', max_length=250)),
                ('other_findings', models.CharField(help_text='Description of other findings', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='NoduleFeatures',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='nodulefeatures_case', serialize=False, to='cases.Case')),
                ('appearance_feature', models.IntegerField(choices=[(0, 'NONE'), (1, 'UNCHANGED'), (2, 'INCREASED'), (3, 'DECREASED'), (4, 'NEW')])),
                ('diameter', models.DecimalField(decimal_places=2, max_digits=5)),
                ('density_feature', models.IntegerField(choices=[(0, 'NONE'), (1, 'SOLID'), (2, 'SEMI SOLID'), (3, 'GROUND GLASS')])),
            ],
        ),
        migrations.CreateModel(
            name='OtherFindings',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='otherfindings_case', serialize=False, to='cases.Case')),
                ('upper_abdomen', models.CharField(help_text='describes other findings in upper abdomen', max_length=250)),
                ('thorax', models.CharField(help_text='describes other findings in thorax', max_length=250)),
                ('base_of_neck', models.CharField(help_text='describes other findings in the Base of neck', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PleuralSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effusion', models.IntegerField(choices=[(0, 'NONE'), (1, 'SMALL'), (2, 'MODERATE'), (3, 'LARGE')], help_text='Describes the degree of effusion progress')),
                ('calcification', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'EXTENSIVE')], help_text='Describes the degree of Calcification progress')),
                ('thickening', models.IntegerField(choices=[(0, 'NONE'), (1, 'MILD'), (2, 'MODERATE'), (3, 'EXTENSIVE')], help_text='Describes the degree of Thickening progress')),
                ('pneumothorax', models.IntegerField(choices=[(0, 'NONE'), (1, 'SMALL'), (2, 'MODERATE'), (3, 'LARGE')], help_text='Describes the degree of Pneumothorax progress')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalParameters',
            fields=[
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='technicalparameters_case', serialize=False, to='cases.Case')),
                ('kVp', models.IntegerField(help_text='Peak kilovoltage, maximum voltage applied across an X-ray tube')),
                ('mA', models.IntegerField(help_text='Milli amper')),
                ('DLP', models.IntegerField(help_text='Dose-length product')),
            ],
        ),
        migrations.AddField(
            model_name='casepleuralspaces',
            name='left_pleural_space',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='left_pleural_space', to='cases.PleuralSpace'),
        ),
        migrations.AddField(
            model_name='casepleuralspaces',
            name='right_pleural_space',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='right_pleural_space', to='cases.PleuralSpace'),
        ),
    ]
